CREATE OR REPLACE PROCEDURE SYSTEM.EXP_ADRES(period VARCHAR2, s_glpu VARCHAR2)
  IS
  pragma autonomous_transaction;

  idpacs ut.id_pac%type;
  idsluch ut.id_sluch%type;
  idserv ut.idserv%type;
  mcod ut.lpu_1%type;
  summv ut.SUMV_USL%type;
  cd_usl ut.CODE_USL%type;

  query VARCHAR2(1500);
  TYPE EmpCurTyp IS REF CURSOR;
  cur1 EmpCurTyp;

BEGIN

  query := 'SELECT distinct(ut.id_sluch) as id_sluch, ut.id_pac, ut.lpu_1, SUM(ut.SUMV_USL) AS summv, MAX(ut.idserv) AS idserv
                    FROM UT05S50'||SUBSTR(period, -6, 6)||' ut
                    INNER JOIN (SELECT ps.ID_PAC
                                 FROM '||period||' ps
                                 WHERE ps.glpu = '||''''||s_glpu||''' AND
                                       NOT EXISTS (SELECT s.ID_PAC, s.GLPU
                                                     FROM SANKC s
                                                     WHERE s.glpu = '||''''||s_glpu||''' AND s.period = '||''''||SUBSTR(period, -6, 6)||''' AND
                                                        ps.id_pac = s.ID_PAC AND ps.GLPU = s.GLPU)
                                 GROUP BY ps.ID_PAC, ps.ADRES, ps.GLPU
                                 HAVING REGEXP_COUNT(ps.ADRES, '' '', 1) <= 2 AND LENGTH(ps.ADRES) < 11
                                 ORDER BY ps.GLPU, ps.ID_PAC) cur
                      ON ut.ID_PAC = cur.ID_PAC
                   GROUP BY ut.id_sluch, ut.id_pac, ut.lpu_1
                   ORDER BY ut.ID_PAC';

  OPEN cur1 for query;
  LOOP
    FETCH cur1 INTO idsluch, idpacs, mcod, summv, idserv;
      EXIT WHEN cur1%NOTFOUND;

      INSERT INTO SANKC (glpu, mcod, povod, flag, ID_PAC, id_sluch, idserv, DATE_EXP, period, comments, summ_shtr)
        VALUES (s_glpu, 'mcod', '5.1.3.', 20, idpacs, idsluch, idserv, SYSDATE, SUBSTR(period,-6,6), 'Наличие незаполненных полей (адрес)', summv);
      COMMIT;
  END LOOP;
  CLOSE cur1;

END;
/